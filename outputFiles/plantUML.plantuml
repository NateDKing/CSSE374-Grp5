@startuml
allowmixing
skinparam class {
BackgroundColor<<Decorator>> LightBlue
BackgroundColor<<Singleton>> Salmon
BackgroundColor<<Singleton Abuse>> Salmon
BorderColor<<Singleton Abuse>> DarkRed
BorderColor<<Singleton>> Red
BorderColor<<Decorator>> Blue
BorderThickness<<Singleton Abuse>> 5
BorderThickness<<Singleton>> 1
BorderThickness<<Decorator>> 1
}
abstract Beverage {
  # description : String
  + <init>() : void
  + getDescription() : String
  + cost() : double
}

label " " as CondimentDecoratorLabel
CondimentDecoratorLabel -[#blue]-> CondimentDecorator : "Decorator"
abstract CondimentDecorator <<Decorator>> {
  + <init>() : void
  + getDescription() : String
}

class Espresso {
  + <init>() : void
  + cost() : double
}

class HouseBlend {
  + <init>() : void
  + cost() : double
}

class JCUTApplication {
  + <init>() : void
  + main(java.lang.String[]) : void
}

label " " as LoggerLabel
LoggerLabel -[#red]-> Logger : "Singleton"
class Logger <<Singleton>> {
  - instance : Logger
  - <init>() : void
  + getInstance() : Logger
  + log(java.lang.String) : void
}

label " " as MilkLabel
MilkLabel -[#blue]-> Milk : "Decorator"
class Milk <<Decorator>> {
  - beverage : Beverage
  + <init>(umlparser.Beverage) : void
  + getDescription() : String
  + cost() : double
}

label " " as MochaLabel
MochaLabel -[#blue]-> Mocha : "Decorator"
class Mocha <<Decorator>> {
  - beverage : Beverage
  + <init>(umlparser.Beverage) : void
  + getDescription() : String
  + cost() : double
}

class Order {
  - orderId : int
  - beverage : Beverage
  + <init>(int, umlparser.Beverage) : void
  + getOrderId() : int
  + getBeverage() : Beverage
  + getCost() : double
  + getDescription() : String
}

class OrderManager {
  - orders : Order>
  + <init>() : void
  + addOrder(umlparser.Order) : void
  + processOrders() : void
}

label " " as SoyLabel
SoyLabel -[#blue]-> Soy : "Decorator"
class Soy <<Decorator>> {
  - beverage : Beverage
  + <init>(umlparser.Beverage) : void
  + getDescription() : String
  + cost() : double
}

CondimentDecorator --|>Beverage
Espresso --|>Beverage
HouseBlend --|>Beverage
Logger --> "1" Logger
Milk --|>CondimentDecorator
Milk --> "1" Beverage
Mocha --|>CondimentDecorator
Mocha --> "1" Beverage
Order --> "1" Beverage
OrderManager --> "*" Order
Soy --|>CondimentDecorator
Soy --> "1" Beverage
@enduml
