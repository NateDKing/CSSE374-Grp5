@startuml
allowmixing
skinparam class {
BackgroundColor<<Decorator>> Salmon
BackgroundColor<<Singleton>> LightBlue
}
abstract Beverage {
  # description : java.lang.String
  + <init>() : void
  + getDescription() : java.lang.String
  + cost() : double
}

label " " as SoyLabel
SoyLabel -[#red]-> Soy : "Decorator"
class Soy <<Decorator>> {
  - beverage : Beverage
  + <init>(umlparser.Beverage) : void
  + getDescription() : java.lang.String
  + cost() : double
}

label " " as CondimentDecoratorLabel
CondimentDecoratorLabel -[#red]-> CondimentDecorator : "Decorator"
abstract CondimentDecorator <<Decorator>> {
  + <init>() : void
  + getDescription() : java.lang.String
}

class OrderManager {
  - orders : java.util.List
  + <init>() : void
  + addOrder(umlparser.Order) : void
  + processOrders() : void
}

class JCUTApplication {
  + <init>() : void
  + main(java.lang.String[]) : void
}

label " " as LoggerLabel
LoggerLabel -[#blue]-> Logger : "Singleton"
class Logger <<Singleton>> {
  - instance : Logger
  - <init>() : void
  + getInstance() : umlparser.Logger
  + log(java.lang.String) : void
}

class Order {
  - orderId : int
  - beverage : Beverage
  + <init>(int, umlparser.Beverage) : void
  + getOrderId() : int
  + getBeverage() : umlparser.Beverage
  + getCost() : double
  + getDescription() : java.lang.String
}

label " " as MilkLabel
MilkLabel -[#red]-> Milk : "Decorator"
class Milk <<Decorator>> {
  - beverage : Beverage
  + <init>(umlparser.Beverage) : void
  + getDescription() : java.lang.String
  + cost() : double
}

label " " as MochaLabel
MochaLabel -[#red]-> Mocha : "Decorator"
class Mocha <<Decorator>> {
  - beverage : Beverage
  + <init>(umlparser.Beverage) : void
  + getDescription() : java.lang.String
  + cost() : double
}

class Espresso {
  + <init>() : void
  + cost() : double
}

class HouseBlend {
  + <init>() : void
  + cost() : double
}

Soy --|>CondimentDecorator
CondimentDecorator --|>Beverage
Milk --|>CondimentDecorator
Mocha --|>CondimentDecorator
Espresso --|>Beverage
HouseBlend --|>Beverage
@enduml
